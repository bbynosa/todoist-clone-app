# For full config options, check the docs at https://docs.serverless.com
# also see https://serverless.com/framework/docs/providers/aws/guide/serverless.yml
# or https://serverless.com/framework/docs/providers/aws/guide/functions/
frameworkVersion: "3"

service: todolist-app

params:
  dev:
    WebsiteS3BucketName: "todolist-app-12312sdfzxc"
plugins:
  # - serverless-deployment-bucket # https://www.npmjs.com/package/serverless-deployment-bucket
  - serverless-s3-sync # https://www.npmjs.com/package/serverless-s3-sync
  # - serverless-offline-ssm # https://www.npmjs.com/package/serverless-offline-ssm
  # - serverless-offline # https://www.npmjs.com/package/serverless-offline

provider:
  name: aws

  region: us-east-1 # controlled by parameters, not CLI or environment, resources can still use provider.region
  stage: dev # defaults to offline mode if none injected from CLI
  disableRollback: false


custom:

  # Deploy website content via s3Sync
  s3Sync:
    - bucketName: ${param:WebsiteS3BucketName}
      localDir: build

resources:
  Resources:
    WebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${param:WebsiteS3BucketName}
    s3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref WebsiteBucket
        PolicyDocument: 
          Statement:
            - Sid: PublicReadAccess
              Effect: Allow
              Action:
                - s3:GetObject
              Resource:
                - !Join ["", [ !GetAtt WebsiteBucket.Arn, "/*" ]]
              Principal: "*"
    WebsiteCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          DefaultRootObject: index.html
          Origins:      
            - DomainName: !GetAtt WebsiteBucket.RegionalDomainName # TODO trying regional over old .DomainName 
              Id: WebsiteBucket.${param:WebsiteS3BucketName} # Origin reference is env safe due to bucket 
              S3OriginConfig: # Limiting access by not using a CustomOriginConfig so that S3 bucket access is restricted
                OriginAccessIdentity:
                  # OriginAccessIdentity: !Join ["", ["origin-access-identity/cloudfront/", !Ref WebsiteCloudfrontOAI]]
          DefaultCacheBehavior:
            TargetOriginId: WebsiteBucket.${param:WebsiteS3BucketName} # Origin reference is env safe due to bucket ref
            ViewerProtocolPolicy: redirect-to-https
            ForwardedValues:
              QueryString: false # TODO try None  as not sure what this really sets out to do - as it is cache, it depends on how we use
              Cookies:
                Forward: none